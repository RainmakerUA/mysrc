<Application x:Class="RM.Win.ServiceController.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
	<Application.Resources>
		<EllipseGeometry x:Key="IconCircle" Center="50,50" RadiusX="47" RadiusY="47" />
	    <DrawingImage x:Key="StartImage">
			<DrawingImage.Drawing>
				<DrawingGroup ClipGeometry="M0,0 V100 H100 V0 H0 Z">
					<GeometryDrawing Brush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" Geometry="{StaticResource IconCircle}" />
					<GeometryDrawing Brush="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" Geometry="F1 M39,30 V70 L73,50 Z" />
				</DrawingGroup>
			</DrawingImage.Drawing>
		</DrawingImage>
		<DrawingImage x:Key="StopImage">
			<DrawingImage.Drawing>
				<DrawingGroup ClipGeometry="M0,0 V100 H100 V0 H0 Z">
					<GeometryDrawing Brush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" Geometry="{StaticResource IconCircle}" />
					<GeometryDrawing Brush="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" Geometry="F1 M30,30 V70 H70 V30 Z" />
				</DrawingGroup>
			</DrawingImage.Drawing>
		</DrawingImage>
		<DrawingImage x:Key="RestartImage">
			<DrawingImage.Drawing>
				<DrawingGroup ClipGeometry="M0,0 V100 H100 V0 H0 Z">
					<GeometryDrawing Brush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" Geometry="{StaticResource IconCircle}" />
					<GeometryDrawing Brush="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" Geometry="F1 M52,30 V70 L86,50 Z" />
					<GeometryDrawing Brush="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" Geometry="F1 M30,30 V70 H44 V30 Z" />
				</DrawingGroup>
			</DrawingImage.Drawing>
		</DrawingImage>
	    <Style x:Key="ControlButton" TargetType="Button">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
		    <Setter Property="Width" Value="40" />
			<Setter Property="Height" Value="40" />
			<Setter Property="Margin" Value="3" />
			<Setter Property="DockPanel.Dock" Value="Right" />
		</Style>
		<Style x:Key="ElementBorder" TargetType="Border">
			<Setter Property="Margin" Value="2" />
			<Setter Property="CornerRadius" Value="5" />
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" />
		</Style>
		<Style x:Key="IconContent" TargetType="ContentControl">
			<Setter Property="Background" Value="Transparent" />
		</Style>
		<Style x:Key="StartIconContent" TargetType="ContentControl" BasedOn="{StaticResource IconContent}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ContentControl">
						<ControlTemplate.Triggers>
							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Button},Path=IsEnabled}" Value="False">
								<DataTrigger.Setters>
									<Setter Property="Opacity" Value="0.5" />
								</DataTrigger.Setters>
							</DataTrigger>
							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Button},Path=IsEnabled}" Value="True">
								<DataTrigger.Setters>
									<Setter Property="Opacity" Value="1.0" />
								</DataTrigger.Setters>
							</DataTrigger>
						</ControlTemplate.Triggers>
						<Viewbox>
							<Canvas Width="100" Height="100">
								<Path Stretch="UniformToFill" Fill="{TemplateBinding Foreground}" Data="F1 M0,50 H10 A40,40 180 1 1 90,50 H100 A50,50 180 1 0 0,50 A50,50 180 1 0 100,50 H90 A40,40 180 1 1 10,50" />
								<Path Stretch="UniformToFill" Fill="{TemplateBinding Foreground}" Data="F1 M38,29.22 V70.78 L67,50 Z" Canvas.Left="40" Canvas.Top="29.22" />
							</Canvas>
						</Viewbox>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="StopIconContent" TargetType="ContentControl" BasedOn="{StaticResource IconContent}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ContentControl">
						<ControlTemplate.Triggers>
							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Button},Path=IsEnabled}" Value="False">
								<DataTrigger.Setters>
									<Setter Property="Opacity" Value="0.5" />
								</DataTrigger.Setters>
							</DataTrigger>
							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Button},Path=IsEnabled}" Value="True">
								<DataTrigger.Setters>
									<Setter Property="Opacity" Value="1.0" />
								</DataTrigger.Setters>
							</DataTrigger>
						</ControlTemplate.Triggers>
						<Viewbox>
							<Canvas Width="100" Height="100">
								<Path Stretch="UniformToFill" Fill="{TemplateBinding Foreground}" Data="F1 M0,50 H10 A40,40 180 1 1 90,50 H100 A50,50 180 1 0 0,50 A50,50 180 1 0 100,50 H90 A40,40 180 1 1 10,50" />
								<Path Stretch="UniformToFill" Fill="{TemplateBinding Foreground}" Data="F1 M35,35 V65 H65 V35 Z" Canvas.Left="35" Canvas.Top="35" />
							</Canvas>
						</Viewbox>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="RestartIconContent" TargetType="ContentControl" BasedOn="{StaticResource IconContent}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ContentControl">
						<ControlTemplate.Triggers>
							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Button},Path=IsEnabled}" Value="False">
								<DataTrigger.Setters>
									<Setter Property="Opacity" Value="0.5" />
								</DataTrigger.Setters>
							</DataTrigger>
							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Button},Path=IsEnabled}" Value="True">
								<DataTrigger.Setters>
									<Setter Property="Opacity" Value="1.0" />
								</DataTrigger.Setters>
							</DataTrigger>
						</ControlTemplate.Triggers>
						<Viewbox>
							<Canvas Width="100" Height="100">
								<Path Stretch="UniformToFill" Fill="{TemplateBinding Foreground}" Data="F1 M0,50 H10 A40,40 180 1 1 90,50 H100 A50,50 180 1 0 0,50 A50,50 180 1 0 100,50 H90 A40,40 180 1 1 10,50" />
								<Path Stretch="UniformToFill" Fill="{TemplateBinding Foreground}" Data="F1 M38,29.22 V70.78 L67,50 Z" Canvas.Left="52" Canvas.Top="29.22" />
								<Path Stretch="UniformToFill" Fill="{TemplateBinding Foreground}" Data="F1 M35,30 V70 H50 V30 Z" Canvas.Left="30" Canvas.Top="30" />
							</Canvas>
						</Viewbox>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="SettingsIconContent" TargetType="ContentControl" BasedOn="{StaticResource IconContent}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ContentControl">
						<ControlTemplate.Triggers>
							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Button},Path=IsEnabled}" Value="False">
								<DataTrigger.Setters>
									<Setter Property="Opacity" Value="0.5" />
								</DataTrigger.Setters>
							</DataTrigger>
							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Button},Path=IsEnabled}" Value="True">
								<DataTrigger.Setters>
									<Setter Property="Opacity" Value="1.0" />
								</DataTrigger.Setters>
							</DataTrigger>
						</ControlTemplate.Triggers>
						<Viewbox>
							<Canvas Width="100" Height="100">
								<Path Stretch="UniformToFill" Fill="{TemplateBinding Foreground}" Data="F1 M0,50 H10 A40,40 180 1 1 90,50 H100 A50,50 180 1 0 0,50 A50,50 180 1 0 100,50 H90 A40,40 180 1 1 10,50" />
								<Path Stretch="UniformToFill" Fill="{TemplateBinding Foreground}" Data="F0 M25,20 V80 H35 V20 H25 M30,50 M45,20 V80 H55 V20 H45 M65,20 V80 H75 V20 H65" Canvas.Left="25" Canvas.Top="20" />
								<Path Stretch="UniformToFill" Fill="{TemplateBinding Foreground}" Data="F0 M30,50 A10,10 180 1 1 30,70 A10,10 180 1 1 30,50 M50,30 A10,10 180 1 1 50,50 A10,10 180 1 1 50,30 M70,50 A10,10 180 1 1 70,70 A10,10 180 1 170,50" Canvas.Left="20" Canvas.Top="30" />
							</Canvas>
						</Viewbox>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Application.Resources>
</Application>
